import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import AuthForm from "../components/AuthForm";
import { login, register, getUser, updateProfile } from "../api/auth";
import Header from "../components/Header";
import Footer from "../components/Footer";

const HomePage = () => {
  const navigate = useNavigate();
  const [type, setType] = useState<"login" | "register">("login");
  const [form, setForm] = useState({
    email: "",
    password: "",
    name: "",
    password_confirmation: "",
  });
  const [error, setError] = useState<string | null>(null);
  const [user, setUser] = useState<any>(null);
  const [editing, setEditing] = useState(false);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setError(null);

    try {
      if (type === "login") {
        if (!form.email.trim() || !form.password.trim()) {
          setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞.");
          return;
        }

        const response = await login({
          email: form.email,
          password: form.password,
        });

        const token = response.data.access_token;
        localStorage.setItem("token", token);

        const userResponse = await getUser(token);
        const userData = userResponse.data.data;
        setUser(userData);
        localStorage.setItem("userEmail", userData.email);
      } else {
        if (
          !form.name.trim() ||
          !form.email.trim() ||
          !form.password.trim() ||
          !form.password_confirmation.trim()
        ) {
          setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.");
          return;
        }

        await register({
          name: form.name,
          email: form.email,
          password: form.password,
          password_confirmation: form.password_confirmation,
        });

        setType("login");
      }
    } catch (err: any) {
      setError(
        err.response?.data?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
      );
    }
  };

  const handleSave = async () => {
    setError(null);
    try {
      const res = await updateProfile(form);
      const updatedUser = res.data.data;

      // –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ç—Ä–µ–±—É–µ—Ç —Ä–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—å
      if (res.data.force_logout) {
        localStorage.removeItem("token");
        localStorage.removeItem("userEmail");
        setUser(null);
        setEditing(false);
        setForm({
          email: "",
          name: "",
          password: "",
          password_confirmation: "",
        });
        return;
      }

      // –µ—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      setUser(updatedUser);
      setEditing(false);
      setForm({
        ...form,
        password: "",
        password_confirmation: "",
      });
    } catch (err: any) {
      console.error(err);
      setError(err.response?.data?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è");
    }
  };

  useEffect(() => {
    const token = localStorage.getItem("token");
    if (token) {
      getUser(token)
        .then((res) => {
          const userData = res.data.data;
          setUser(userData);
          setForm({
            name: userData.name,
            email: userData.email,
            password: "",
            password_confirmation: "",
          });
        })
        .catch(() => {
          localStorage.removeItem("token");
          localStorage.removeItem("userEmail");
          setUser(null);
        });
    }
  }, []);

  return (
    <div className="page-wrapper">
      <Header userEmail={user?.email || null} />
      <div className="home-container">
        <div className="background-animation">
          <span></span>
          <span></span>
          <span></span>
          <span></span>
          <span></span>
        </div>

        <div className="home-left">
          <h1>–í–∞—à —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫</h1>
          <p className="subtext">–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª—å—à–µ –æ—Ç —Å–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤</p>
          <ul className="benefits">
            <li>
              <div className="benefit-content">
                <strong>–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –±—é–¥–∂–µ—Ç–æ–º</strong>
                <div>
                  –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å, –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                </div>
              </div>
            </li>
            <li>
              <div className="benefit-content">
                <strong>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –æ–¥–∏–Ω –∫–ª–∏–∫</strong>
                <div>–ë—ã—Å—Ç—Ä–æ —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–æ—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</div>
              </div>
            </li>
            <li>
              <div className="benefit-content">
                <strong>–£–º–Ω–∞—è –∫–æ–ø–∏–ª–∫–∞</strong>
                <div>–ö–æ–ø–∏—Ç–µ –∏ —Å–Ω–∏–º–∞–π—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ ‚Äî –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏</div>
              </div>
            </li>
            <li>
              <div className="benefit-content">
                <strong>–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</strong>
                <div>
                  –ù–∞–≥–ª—è–¥–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –ø–æ —Ç—Ä–∞—Ç–∞–º, –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                </div>
              </div>
            </li>
            <li>
              <div className="benefit-content">
                <strong>AI-—Å–æ–≤–µ—Ç–Ω–∏–∫</strong>
                <div>
                  –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±—é–¥–∂–µ—Ç–∞ –∏ –ø—Ä–∏–≤—ã—á–µ–∫
                </div>
              </div>
            </li>
            <li>
              <div className="benefit-content">
                <strong>–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF</strong>
                <div>–°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –æ—Ç—á—ë—Ç—ã –∏ –¥–µ–ª–∏—Ç–µ—Å—å –∏–º–∏ –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</div>
              </div>
            </li>
          </ul>
        </div>

        <div className="home-right">
          {user ? (
            <div className="profile-card">
              <h2 className="profile-title">–ü—Ä–æ—Ñ–∏–ª—å</h2>
              <div className="profile-avatar">üë§</div>

              {!editing ? (
                <>
                  <div className="profile-fields">
                    <p>
                      <strong>–ò–º—è:</strong> {user.name}
                    </p>
                    <p>
                      <strong>Email:</strong> {user.email}
                    </p>
                  </div>
                  <div className="profile-buttons">
                    <button onClick={() => setEditing(true)}>
                      ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button onClick={() => navigate("/dashboard")}>
                      üìä –í Dashboard
                    </button>
                    <button
                      onClick={() => {
                        localStorage.removeItem("token");
                        localStorage.removeItem("userEmail");
                        setUser(null);
                        setForm({
                          name: "",
                          email: "",
                          password: "",
                          password_confirmation: "",
                        });
                        window.location.reload();
                      }}
                    >
                      üö™ –í—ã–π—Ç–∏
                    </button>
                  </div>
                </>
              ) : (
                <>
                  <div className="profile-edit-form">
                    <input
                      type="text"
                      name="name"
                      value={form.name}
                      onChange={handleChange}
                      placeholder="–ò–º—è"
                    />
                    <input
                      type="email"
                      name="email"
                      value={form.email}
                      onChange={handleChange}
                      placeholder="Email"
                    />
                    <input
                      type="password"
                      name="password"
                      value={form.password}
                      onChange={handleChange}
                      placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
                    />
                    <input
                      type="password"
                      name="password_confirmation"
                      value={form.password_confirmation}
                      onChange={handleChange}
                      placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    />
                  </div>
                  <div className="profile-buttons">
                    <button onClick={handleSave}>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    <button onClick={() => setEditing(false)}>‚ùå –û—Ç–º–µ–Ω–∞</button>
                  </div>
                </>
              )}
            </div>
          ) : (
            <div className="auth-card">
              <div className="auth-header">
                <button
                  type="button"
                  className={type === "login" ? "active" : ""}
                  onClick={() => setType("login")}
                >
                  –í–æ–π—Ç–∏
                </button>
                <button
                  type="button"
                  className={type === "register" ? "active" : ""}
                  onClick={() => setType("register")}
                >
                  –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                </button>
              </div>

              <AuthForm
                type={type}
                form={form}
                onChange={handleChange}
                onSubmit={handleSubmit}
                error={error}
              />
            </div>
          )}
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default HomePage;
